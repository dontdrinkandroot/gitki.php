{% extends 'DdrGitkiBaseBundle::base.html.twig' %}
{% block title %} - Markdown Syntax{% endblock %}
{% block container %}
    <div class="page-header">
        <h1>Markdown Syntax</h1>
    </div>

    <div class="row">
        <div class="col-md-4 col-md-push-8">
            <div class="panel panel-default">
                <div class="panel-body">
                    <ul class="margin-bottom-none">
                        <li><a href="#structuring">Structuring</a></li>
                        <li><a href="#text">Text</a></li>
                        <li><a href="#lists">Lists</a></li>
                        <li><a href="#quotes">Quotes</a></li>
                        <li><a href="#rules">Horizontal Rules</a></li>
                        <li><a href="#code">Code</a></li>
                        <li><a href="#links">Links</a></li>
                        <li><a href="#images">Images</a></li>
                    </ul>
                </div>
            </div>
        </div>
        <div class="markdown-html col-md-8 col-md-pull-4">

            <p>This is only a summary of the most common syntax. For details see the
                <a href="http://daringfireball.net/projects/markdown/syntax" rel="external">Original documentation</a>
                and
                the <a href="https://help.github.com/articles/github-flavored-markdown" rel="external">GitHub</a>
                extensions.</p>

            <section id="structuring">
                <h2>Structuring</h2>

                <h3>Title</h3>

<pre><code>Your page should always have a title, you can write a page title like this:

        This is a page title
        ====================</code></pre>

                <h3>Section</h3>

<pre><code>You can further divide your document into sections, begin a section like this:

        This is a section title
        -----------------------</code></pre>

                <h3>Subsections</h3>

<pre><code>If you want to further structure you can also use subsections:

        ### This is a subsection

        #### This is a subsubsection</code></pre>

            </section>

            <section id="text">
                <h2>Text</h2>

                <h3>Paragraphs</h3>

<pre><code>Paragraphs are separated by a blank line,
        line breaks are ignored. If you want to explicitly add a line break, you can do so by appending two spaces at the end of a line.

        This is the second paragraph.</code></pre>

                <h3>Bold/Italic/Strikethrough</h3>

<pre><code>This is **bold** text.

        This is _italic_ text.

        This is ~~strikedthrough~~ text.

        This is inline `code`.</code></pre>
            </section>

            <section id="lists">
                <h2>Lists</h2>

                <h3>Unordered Lists</h3>

<pre><code>This is an unordered list:

        *   A single item
        *   Another item
        *   Can also contain.

        Multiple paragraphs or other elements if they are indented correctly.
        *   This also applies
        *    for nested lists</code></pre>

                <h3>Ordered Lists</h3>

<pre><code>This is an ordered List:

        1.  Same rules as in unordered lists.
        2.  Just that they are ordered.
        1.  The numbers are just an orientation, this will still be rendered as the third item</code></pre>
            </section>

            <section id="quotes">
                <h2>Quotes</h2>

<pre><code>> This is the first level of quoting.
        >
        > > This is nested blockquote.
        >
        > Back to the first level.</code></pre>
            </section>

            <section id="rules">
                <h2>Horizontal Rules</h2>

<pre><code>A line of dashes will create a horizontal rule

        ---------------------------------------</code></pre>
            </section>

            <section id="code">
                <h2>Code</h2>

<pre><code>You can print code blocks by wrapping them in backticks:

        ```
        function test() {
        console.log("notice the blank line before this function?");
        }
        ```

        If you want syntax highlighting you can also specify the language:

        ```ruby
        require 'redcarpet'
        markdown = Redcarpet.new("Hello World!")
        puts markdown.to_html
        ```</code></pre>
            </section>

            <section id="links">
                <h2>Links</h2>

                <h3>Inline Links</h3>
<pre><code>This is [an example](http://example.com/ "Title") inline link.

        [This link](http://example.net/) has no title attribute.

        If you want to link pages within the wiki you can do so by using relative paths:
        [This is an internal link](./file-in-same-directory.md)</code></pre>

                <h3>Reference Links</h3>
<pre><code>This is [an example][id] reference-style link.

        You can define the references anywhere in the document like this:
        [id]: http://example.com/  "Optional Title Here"</code></pre>
            </section>

            <section id="images">
                <h2>Images</h2>

<pre><code>Images can be inserted with the following syntax, once again they can be relative (as links can be) if you upload the image to the wiki.

        ![Text to show when image can't be loaded](/path/to/img.jpg)</code></pre>
            </section>

        </div>
    </div>
{% endblock %}
